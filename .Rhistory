rm(list = ls())
gc()
# paquetes ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(janitor)
library(haven)
select <- dplyr::select
rename <- dplyr::rename
# * listado de comunas ----------------------------------------------------
codigo_comuna <- read_excel("2022/datos/0_raw_data/diseno_muestral/codigo_comuna.xlsx") %>%
filter(cod_comuna != 99999 & cod_comuna != 88888 & cod_comuna != 12202) %>%  # sin antártica y códigos mal especificados
rename(comuna = cod_comuna, nombre_comuna = comuna)
base_fh_2020 <- readRDS("C:/Users/gsotomayor/Desktop/Diplomado/Trabajo APPDD/base_fh_2020.rds")
base_fh_2020 <- readRDS("base_fh_2020.rds")
base_fh_2020$brecha<-(base_fh_2020$promedio_afc_hom_2020-base_fh_2020$promedio_afc_muj_2020)/base_fh_2020$promedio_afc_hom_2020*100
base_fh_2020[order(base_fh_2020$brecha),c("comuna","brecha")]
hist(base_fh_2020$brecha)
lm1<-lm(brecha~.,data=base_fh_2020[,c(2:19,105:124,364)])
library(texreg)
base_fh_2020$tasa_victimizacion_2019
screenreg(lm(brecha~prop_rural_2020+
prop_poblacion_pueblos_originarios_ley_chile_2017+
tasa_dependencia_familiar_2020+
tasa_matricula_neta_parvularia_2020+
promedio_anios_escolaridad25_2017+
I(proyeccion_pob_0_17_anios_2020/proyeccion_pob_2020)+
log_ing_municipales_permanentes_pc_2018+
prop_fonasa_a_hom_2019+
prop_fonasa_a_muj_2019+
log(promedio_pet_afc_2020+
prop_tofd_2020_w)+
prop_ive_sinae_2020+
log(tasa_victimizacion_2019),data=base_fh_2020
))
base_fh_2020$log_ing_municipales_permanentes_pc_2018
step_lm1 <- stepAIC(lm1, direction = "both",
trace = FALSE)
summary(step_lm1)
library(MASS)
base_fh_2020$brecha<-(base_fh_2020$promedio_afc_hom_2020-base_fh_2020$promedio_afc_muj_2020)/base_fh_2020$promedio_afc_hom_2020*100
step_lm1 <- stepAIC(lm1, direction = "both",
trace = FALSE)
summary(step_lm1)
lm1<-lm(brecha~prop_rural_2020+
prop_poblacion_pueblos_originarios_ley_chile_2017+
tasa_dependencia_familiar_2020+
tasa_matricula_neta_parvularia_2020+
promedio_anios_escolaridad25_2017+
I(proyeccion_pob_0_17_anios_2020/proyeccion_pob_2020)+
log_ing_municipales_permanentes_pc_2018+
prop_fonasa_a_hom_2019+
prop_fonasa_a_muj_2019+
log(promedio_pet_afc_2020+
prop_tofd_2020_w)+
prop_ive_sinae_2020+
log(tasa_victimizacion_2019),data=base_fh_2020
)
step_lm1 <- stepAIC(lm1, direction = "both",
trace = FALSE)
summary(step_lm1)
if (!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
readxl,
chilemapas,
sjmisc)
#Descarga de datos
download.file("https://observatorio.ministeriodesarrollosocial.gob.cl/storage/docs/rraa/2021/Indicadores_Ingreso_Anual_2021.xlsx",
"input/data/original/Indicadores_Ingreso_Anual_2021.xlsx",mode = "wb")
#Carga de datos a R
ingreso<-read_excel("input/data/original/Indicadores_Ingreso_Anual_2021.xlsx", skip = 2,
sheet = "1")
ingresoh<-ingreso %>% filter(Nivel=="comuna_sexo" & Desagregación2 =="Masculino")  %>%
dplyr::select(comuna= Desagregación1, ing_prom_hombre = "2021")
ingresom<-ingreso %>% filter(Nivel=="comuna_sexo" & Desagregación2 =="Femenino")%>%
dplyr::select(comuna= Desagregación1, ing_prom_mujer = "2021")
#creacion variable de brecha de género por comuna
ingresos<-merge(ingresoh,ingresom, by="comuna") %>%
mutate(ing_prom_hombre=as.numeric(ing_prom_hombre),
ing_prom_mujer=as.numeric(ing_prom_mujer),
brecha=(ing_prom_hombre-ing_prom_mujer)/ing_prom_hombre*100,
comuna= tolower(iconv(comuna,to = "ASCII//TRANSLIT" )))
ingresos$comuna[ingresos$comuna=="aysen"] <- "aisen"
ingresos$comuna[ingresos$comuna=="o higgins"] <- "o'higgins"
ingresos$comuna[ingresos$comuna=="coyhaique"] <- "coihaique"
#perdidos de casos extremos
ingresos$brecha[ingresos$comuna%in% c("laguna blanca","lago verde",
"la higuera")]<-NA
#histograma
ggplot(ingresos, aes(x=brecha)) +
geom_histogram(fill="#35b779", color="black") +
theme_minimal() +
labs(x="Brecha salarial de género bruta", y="Frecuencia", title="Distribución de la brecha salarial de género por comuna")
ggsave(filename="output/graphs/histograma.jpeg",device = "jpeg",
width = 2000,
height = 2000,
units = "px")
#tabla por tramos
ingresos$brecha_tramos<-cut(ingresos$brecha,c(min(ingresos$brecha,na.rm=T),0,12,24,
max(ingresos$brecha,na.rm=T)))
frq(ingresos$brecha_tramos,out = "viewer")
frq(ingresos$brecha_tramos,out = "browser",
file = "output/tables/tablarangos.html")
#intregrar código de comuna para merge con mapa
codigo_comuna <- read_excel("input/data/original/codigo_comuna.xlsx") %>%
mutate(comuna= tolower(iconv(comuna,to = "ASCII//TRANSLIT" )))
ingresos<-merge(codigo_comuna,ingresos,by="comuna")
#mapa
mapa_comunas$codigo_comunan<-as.numeric(mapa_comunas$codigo_comuna)
datamapa<-merge(mapa_comunas,ingresos[,c("cod_comuna","brecha")],by.x = "codigo_comunan",by.y = "cod_comuna")
ggplot(datamapa) +
geom_sf(aes(fill = brecha, geometry = geometry))  +
scale_fill_gradient2(low = "#fde725", mid = "#35b779", high = "#440154", midpoint = 0, name = "brecha") +
theme_minimal(base_size = 13)
ggsave(filename="output/graphs/mapa.jpeg",device = "jpeg",
width = 5000,
height = 5000,
units = "px")
